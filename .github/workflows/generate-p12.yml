name: Generate p12

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Url to zip of file .cer + private.key'
        required: true
      password:
        description: 'Certificate password'
        required: true
      
jobs:
  generate_p12:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate p12
        env:
          TELE_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELE_CHATID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # inputs
          url="${{ github.event.inputs.url }}"
          pas="${{ github.event.inputs.password }}"

          # download file
          wget -O file.zip "$url"
          unzip -qo file.zip && rm -f file.zip
          cerf=$(ls *.cer| head -n 1)

          chmod 600 private.key $cerf
          openssl -v
          # verify
          openssl rsa -in private.key -check
          openssl x509 -in $cerf -text -noout
          #ls -a;
          #echo "openssl pkcs12 -export -out certificate.p12 -inkey private.key -in $(ls *.cer| head -n 1) -passout pass:$pas";
          [[ -f private.key ]] && openssl pkcs12 -export -out certificate.p12 -inkey private.key -in $cerf -passout pass:$pas

          # send to telegram
          [[ -f private.key ]] && curl -F chat_id="$TELE_CHATID" -F document=@certificate.p12 "https://api.telegram.org/bot$TELE_TOKEN/sendDocument" || curl -s -X POST "https://api.telegram.org/bot$TELE_TOKEN/sendMessage" -d "chat_id=$TELE_CHATID" -d "text=failed-generate-certificate.p12";
